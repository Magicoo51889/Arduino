#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// The dimensions of the OLED display
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define SCREEN_ADDRESS 0x3C // This is the address of the OLED
#define OLED_RESET -1 // Reset pin for the display

// create the display object
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define BMPWidth 64
#define BMPHeight 64

// Define the first 64x64 image
const unsigned char myBitmap1 [] PROGMEM = {
    // 'linkedin Logo', 64x64px
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
    0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1c, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x18, 0x00, 0x3f, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x10, 0x00, 0x1f, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x00, 0x00, 0x07, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x07, 0xe0, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x0f, 0xf0, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x0f, 0xf0, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 0x1f, 0xf8, 0x03, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
    0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

// Define the second 64x64 image
const unsigned char myBitmap2 [] PROGMEM = {
    // 'qr code', 64x64px
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0xc8, 0x70, 0x87, 0xff, 0x80, 
    0x01, 0xff, 0xe0, 0xc8, 0x70, 0x87, 0xff, 0x80, 0x01, 0x80, 0x26, 0xc6, 0x7c, 0x06, 0x01, 0x80, 
    0x01, 0x80, 0x26, 0xc6, 0x7c, 0x06, 0x01, 0x80, 0x01, 0x9f, 0x20, 0x09, 0x9f, 0xe6, 0xf9, 0x80, 
    0x01, 0x9f, 0x27, 0xc9, 0xfc, 0x06, 0xf9, 0x80, 0x01, 0x9f, 0x27, 0xc9, 0xfc, 0x06, 0xf9, 0x80, 
    0x01, 0x9f, 0x21, 0x01, 0x90, 0xe6, 0xf9, 0x80, 0x01, 0x9f, 0x21, 0x01, 0x90, 0xe6, 0xf9, 0x80, 
    0x01, 0x80, 0x27, 0x3e, 0x0c, 0x86, 0x01, 0x80, 0x01, 0xff, 0xe7, 0xff, 0x9f, 0xe7, 0xff, 0x80, 
    0x01, 0xff, 0xe6, 0xc9, 0x93, 0x67, 0xff, 0x80, 0x00, 0x00, 0x01, 0xf1, 0x9f, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xf1, 0x9f, 0x80, 0x00, 0x00, 0x01, 0xff, 0x7f, 0x30, 0x70, 0x19, 0x36, 0x00, 
    0x01, 0xff, 0x7f, 0x30, 0x70, 0x19, 0x36, 0x00, 0x01, 0x90, 0x1e, 0xc9, 0x90, 0xff, 0x36, 0x00, 
    0x01, 0xec, 0xfe, 0xc6, 0x0f, 0x80, 0x38, 0x00, 0x01, 0xec, 0xfe, 0xc6, 0x0f, 0x80, 0x38, 0x00, 
    0x00, 0x1f, 0x1e, 0x0f, 0x9f, 0xfe, 0xf1, 0x80, 0x00, 0x1f, 0x1e, 0x0f, 0x9f, 0xfe, 0xf1, 0x80, 
    0x01, 0xe0, 0xe1, 0xc8, 0x6c, 0x67, 0x00, 0x00, 0x00, 0x13, 0xde, 0x00, 0x10, 0x1b, 0xf6, 0x00, 
    0x00, 0x13, 0xde, 0x00, 0x10, 0x19, 0xf6, 0x00, 0x00, 0x6f, 0xff, 0x3e, 0x6c, 0x81, 0x3f, 0x80, 
    0x00, 0x6f, 0xff, 0x3e, 0x6c, 0x81, 0x3f, 0x80, 0x01, 0x8c, 0xc1, 0x37, 0x9f, 0xff, 0xc7, 0x80, 
    0x01, 0x8c, 0xc1, 0x37, 0x9f, 0xff, 0xc7, 0x80, 0x00, 0x13, 0x78, 0xf0, 0x73, 0x1f, 0x00, 0x00, 
    0x01, 0x8f, 0x07, 0xc8, 0x00, 0x61, 0xc6, 0x00, 0x01, 0x8f, 0x07, 0xc8, 0x00, 0x61, 0xc6, 0x00, 
    0x01, 0x9f, 0x66, 0x06, 0x0c, 0x01, 0x3f, 0x80, 0x01, 0x9f, 0x66, 0x06, 0x0c, 0x01, 0x3f, 0x80, 
    0x01, 0x90, 0xde, 0x0f, 0x9f, 0xff, 0xcf, 0x80, 0x01, 0x8f, 0xe1, 0xc8, 0x7c, 0x7f, 0xce, 0x00, 
    0x01, 0x8f, 0xe1, 0xc8, 0x7c, 0x7f, 0xce, 0x00, 0x00, 0x00, 0x06, 0xc1, 0x83, 0xe0, 0xc6, 0x00, 
    0x00, 0x00, 0x06, 0xc1, 0x83, 0xe0, 0xc6, 0x00, 0x01, 0xff, 0xe7, 0x38, 0x6f, 0x66, 0xc8, 0x00, 
    0x01, 0xff, 0xe7, 0x38, 0x6f, 0x64, 0xc8, 0x00, 0x01, 0x80, 0x21, 0x30, 0x1f, 0xe0, 0xff, 0x80, 
    0x01, 0x9f, 0x26, 0x30, 0x7c, 0x7f, 0xff, 0x80, 0x01, 0x9f, 0x26, 0x30, 0x7c, 0x7f, 0xff, 0x80, 
    0x01, 0x9f, 0x27, 0x0e, 0x60, 0x67, 0x00, 0x00, 0x01, 0x9f, 0x27, 0x0e, 0x60, 0x67, 0x00, 0x00, 
    0x01, 0x9f, 0x26, 0x07, 0xec, 0x9f, 0xce, 0x00, 0x01, 0x80, 0x27, 0x0e, 0x1f, 0xe1, 0x39, 0x80, 
    0x01, 0x80, 0x27, 0x0e, 0x1f, 0xe1, 0x39, 0x80, 0x01, 0xff, 0xe6, 0xc9, 0xef, 0x7f, 0xf8, 0x00, 
    0x01, 0xff, 0xe6, 0xc9, 0xef, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};


void setup() {
    display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
    display.setRotation(4);
    display.clearDisplay(); // Clear the buffer

  }

void loop() {
    display.display();  
    display.drawBitmap(0, 0, myBitmap1, BMPWidth, BMPHeight, WHITE); // Draw the first image
    display.drawBitmap(64, 0, myBitmap2, BMPWidth, BMPHeight, WHITE); // Draw the second image
    display.display(); 
}